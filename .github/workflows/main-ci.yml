name: elite-CI

on:
  push:
    branches: [ master, prod ]

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
    build:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - name: Build docker images
          run: docker compose build
        - name: Login to private Container Registry
          uses: docker/login-action@v2
          with:
            registry: ${{ secrets.REGISTRY_HOST }}
            username: ${{ secrets.REGISTRY_USER }}
            password: ${{ secrets.REGISTRY_PASSWORD }}
        - name: Tag images to push to private Container Registry
          run: |
            docker tag ea-nginx:latest ${{ secrets.REGISTRY_HOST }}/elite-auto/nginx:latest
            docker tag ea-client:latest ${{ secrets.REGISTRY_HOST }}/elite-auto/client:latest
            docker tag ea-api:latest ${{ secrets.REGISTRY_HOST }}/elite-auto/api:latest
            docker tag ea-imgproxy:latest ${{ secrets.REGISTRY_HOST }}/elite-auto/imgproxy:latest
        - name: Push images to private Container Registry
          run: |
            docker push ${{ secrets.REGISTRY_HOST }}/elite-auto/nginx:latest
            docker push ${{ secrets.REGISTRY_HOST }}/elite-auto/client:latest
            docker push ${{ secrets.REGISTRY_HOST }}/elite-auto/api:latest
            docker push ${{ secrets.REGISTRY_HOST }}/elite-auto/imgproxy:latest 



    release:
      needs: build
      runs-on: ubuntu-latest
      steps:
       - uses: actions/checkout@v3
         with:
            fetch-depth: 0
       - name: install semantic release
         uses: actions/setup-node@v3
         with:
            node-version: 16.x
            cache: 'npm'
       - run: npm ci
       - run: npx semantic-release

    tagging:
      needs: release
      runs-on: ubuntu-latest
      steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Find Tag
        id: tagger
        uses: digital-ai/query-tag-action@v2
        with:
          include: 'v*'
          exclude: '*-rc*'
          commit-ish: 'HEAD'
          exact-match: 'true'
      - name: Show Tag
        id: display
        run: |
          echo 'Output from Find Tag: ${{steps.tagger.outputs.tag}}'

      - name: Login to private Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.REGISTRY_HOST }}
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Pull images from private Container Registry
        run: |
            docker pull ${{ secrets.REGISTRY_HOST }}/elite-auto/nginx:latest
            docker pull ${{ secrets.REGISTRY_HOST }}/elite-auto/client:latest
            docker pull ${{ secrets.REGISTRY_HOST }}/elite-auto/api:latest
            docker pull ${{ secrets.REGISTRY_HOST }}/elite-auto/imgproxy:latest 
      - name: tagging docker images 
        run: |
            docker tag ${{ secrets.REGISTRY_HOST }}/elite-auto/nginx:latest          ${{ secrets.REGISTRY_HOST }}/elite-auto/nginx:${{steps.tagger.outputs.tag}}
            docker tag ${{ secrets.REGISTRY_HOST }}/elite-auto/client:latest         ${{ secrets.REGISTRY_HOST }}/elite-auto/client:${{steps.tagger.outputs.tag}}
            docker tag ${{ secrets.REGISTRY_HOST }}/elite-auto/api:latest            ${{ secrets.REGISTRY_HOST }}/elite-auto/api:${{steps.tagger.outputs.tag}}
            docker tag ${{ secrets.REGISTRY_HOST }}/elite-auto/imgproxy:latest       ${{ secrets.REGISTRY_HOST }}/elite-auto/imgproxy:${{steps.tagger.outputs.tag}}
      - name: Push images to private Container Registry
        run: |
          docker push ${{ secrets.REGISTRY_HOST }}/elite-auto/nginx:${{steps.tagger.outputs.tag}}
          docker push ${{ secrets.REGISTRY_HOST }}/elite-auto/client:${{steps.tagger.outputs.tag}}
          docker push ${{ secrets.REGISTRY_HOST }}/elite-auto/api:${{steps.tagger.outputs.tag}}
          docker push ${{ secrets.REGISTRY_HOST }}/elite-auto/imgproxy:${{steps.tagger.outputs.tag}}  


    deploy-cluster-0:
      runs-on: ubuntu-latest
      needs: tagging
      if: ${{ github.ref == 'refs/heads/master' }}
      steps:
        - uses: actions/checkout@v2
        - name: Find Tag
          id: deploy-tagger
          uses: digital-ai/query-tag-action@v2
          with:
            include: 'v*'
            exclude: '*-rc*'
            commit-ish: 'HEAD'
            exact-match: 'false'
        - name: set nginx image
          uses: actions-hub/kubectl@master
          env:
            KUBE_CONFIG: ${{ secrets.KUBECONFIG_CLUSTER_2 }} 
          with:
            args: set image deployment/nginx-pod  nginx=${{ secrets.REGISTRY_HOST }}/elite-auto/nginx:${{steps.deploy-tagger.outputs.tag}}

        - name: set client image
          uses: actions-hub/kubectl@master
          env:
            KUBE_CONFIG: ${{ secrets.KUBECONFIG_CLUSTER_2 }}
          with:
            args: set image deployment/client-pod   client=${{ secrets.REGISTRY_HOST }}/elite-auto/client:${{steps.deploy-tagger.outputs.tag}}

        - name: set nginx image
          uses: actions-hub/kubectl@master
          env:
            KUBE_CONFIG: ${{ secrets.KUBECONFIG_CLUSTER_2 }}
          with:
            args: set image deployment/imgproxy-pod  image-proxy=${{ secrets.REGISTRY_HOST }}/elite-auto/imgproxy:${{steps.deploy-tagger.outputs.tag}}

        - name: set api image
          uses: actions-hub/kubectl@master
          env:
            KUBE_CONFIG: ${{ secrets.KUBECONFIG_CLUSTER_2 }}
          with:
            args: set image deployment/api-pod  api=${{ secrets.REGISTRY_HOST }}/elite-auto/api:${{steps.deploy-tagger.outputs.tag}}

    test-cluster-0:
      runs-on: ubuntu-latest
      needs: deploy-cluster-0
      steps:
       - uses: actions/checkout@v3
       - name: Test job
         run: echo 'this is a test job'

    deploy-cluster-1:
      runs-on: ubuntu-latest
      needs: test-cluster-0
      if: ${{ github.ref == 'refs/heads/master' }}
      steps:
        - uses: actions/checkout@v2
        - name: Find Tag
          id: deploy-tagger
          uses: digital-ai/query-tag-action@v2
          with:
            include: 'v*'
            exclude: '*-rc*'
            commit-ish: 'HEAD'
            exact-match: 'false'
        - name: set nginx image
          uses: actions-hub/kubectl@master
          env:
            KUBE_CONFIG: ${{ secrets.KUBECONFIG_CLUSTER_1 }}
          with:
            args: set image deployment/nginx-pod  nginx=${{ secrets.REGISTRY_HOST }}/elite-auto/nginx:${{steps.deploy-tagger.outputs.tag}}

        - name: set client image
          uses: actions-hub/kubectl@master
          env:
            KUBE_CONFIG: ${{ secrets.KUBECONFIG_CLUSTER_1 }}
          with:
            args: set image deployment/client-pod   client=${{ secrets.REGISTRY_HOST }}/elite-auto/client:${{steps.deploy-tagger.outputs.tag}}

        - name: set nginx image
          uses: actions-hub/kubectl@master
          env:
            KUBE_CONFIG: ${{ secrets.KUBECONFIG_CLUSTER_1 }}
          with:
            args: set image deployment/imgproxy-pod  image-proxy=${{ secrets.REGISTRY_HOST }}/elite-auto/imgproxy:${{steps.deploy-tagger.outputs.tag}}

        - name: set api image
          uses: actions-hub/kubectl@master
          env:
            KUBE_CONFIG: ${{ secrets.KUBECONFIG_CLUSTER_1 }}
          with:
            args: set image deployment/api-pod  api=${{ secrets.REGISTRY_HOST }}/elite-auto/api:${{steps.deploy-tagger.outputs.tag}}
